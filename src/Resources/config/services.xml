<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services
        https://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <!-- Backup Manager -->
        <service id="symfony_backup.manager" class="ProBackupBundle\Manager\BackupManager" public="true">
            <argument>%kernel.project_dir%/var/backups</argument> <!-- backup_dir -->
            <argument type="service" id="event_dispatcher" on-invalid="null" />
            <argument type="service" id="logger" on-invalid="null" />
            
            <!-- Storage adapters will be added by the extension -->
            <!-- Database adapters will be added by the extension -->
            <!-- Compression adapters will be added by the extension -->
        </service>
        
        <!-- Register the manager as an alias -->
        <service id="ProBackupBundle\Manager\BackupManager" alias="symfony_backup.manager" public="false" />
        
        <!-- Console Commands -->
        <service id="symfony_backup.command.backup" class="ProBackupBundle\Command\BackupCommand">
            <argument type="service" id="symfony_backup.manager" />
            <tag name="console.command" />
        </service>
        
        <service id="symfony_backup.command.restore" class="ProBackupBundle\Command\RestoreCommand">
            <argument type="service" id="symfony_backup.manager" />
            <tag name="console.command" />
        </service>
        
        <service id="symfony_backup.command.list" class="ProBackupBundle\Command\ListCommand">
            <argument type="service" id="symfony_backup.manager" />
            <tag name="console.command" />
        </service>
        
        <!-- Compiler passes -->
        <service id="symfony_backup.storage_adapter_pass" class="ProBackupBundle\DependencyInjection\Compiler\StorageAdapterPass">
            <tag name="container.compiler_pass" />
        </service>
        
        <service id="symfony_backup.database_adapter_pass" class="ProBackupBundle\DependencyInjection\Compiler\DatabaseAdapterPass">
            <tag name="container.compiler_pass" />
        </service>
        
        <service id="symfony_backup.compression_adapter_pass" class="ProBackupBundle\DependencyInjection\Compiler\CompressionAdapterPass">
            <tag name="container.compiler_pass" />
        </service>
    </services>
</container>